{"ast":null,"code":"import React,{useState}from'react';import'./alert.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Alert(){const[displayAlert,setDisplayAlert]=useState(true);const toggle=()=>{setDisplayAlert(!displayAlert);};return/*#__PURE__*/_jsx(_Fragment,{children:displayAlert&&/*#__PURE__*/_jsxs(\"div\",{className:displayAlert?\"alert show\":\"alert\",onClick:toggle,children:[/*#__PURE__*/_jsx(\"span\",{className:\"closebtn\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Notice:\"}),\" Website Still Under Development.\"]})});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Alert","displayAlert","setDisplayAlert","toggle","children","className","onClick"],"sources":["/home/fahd/projects/portifolio/src/components/Alert/Alert.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './alert.css';\n\nexport default function Alert() {\n  const [displayAlert, setDisplayAlert] = useState(true);\n\n  const toggle = () => {\n    setDisplayAlert(!displayAlert);\n  };\n\n  return (\n    <>\n      {displayAlert && (\n        <div className={displayAlert ? \"alert show\" : \"alert\"} onClick={toggle}>\n          <span className=\"closebtn\">&times;</span>\n          <strong>Notice:</strong> Website Still Under Development.\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAErB,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAC9B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAEtD,KAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACnBD,eAAe,CAAC,CAACD,YAAY,CAAC,CAChC,CAAC,CAED,mBACEN,IAAA,CAAAI,SAAA,EAAAK,QAAA,CACGH,YAAY,eACXJ,KAAA,QAAKQ,SAAS,CAAEJ,YAAY,CAAG,YAAY,CAAG,OAAQ,CAACK,OAAO,CAAEH,MAAO,CAAAC,QAAA,eACrET,IAAA,SAAMU,SAAS,CAAC,UAAU,CAAAD,QAAA,CAAC,MAAO,CAAM,CAAC,cACzCT,IAAA,WAAAS,QAAA,CAAQ,SAAO,CAAQ,CAAC,oCAC1B,EAAK,CACN,CACD,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}